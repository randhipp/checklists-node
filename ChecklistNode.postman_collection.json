{
	"info": {
		"_postman_id": "e43523a8-01ad-4c56-91e2-a912acdd9fa4",
		"name": "Checklist Node",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Items",
			"item": [
				{
					"name": "Get List of All Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f1f0871-07e0-4012-8cc3-abba2f3b5cf4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"meta\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"count\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"total\": {",
									"          \"type\": \"integer\"",
									"        }",
									"      }",
									"    },",
									"    \"data\": {",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"type\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"id\": {",
									"            \"type\": \"string\"",
									"          },",
									"          \"attributes\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"description\": {",
									"                \"type\": \"string\"",
									"              },",
									"              \"is_completed\": {",
									"                \"type\": \"boolean\"",
									"              },",
									"              \"completed_at\": {",
									"                \"type\": \"null\"",
									"              },",
									"              \"completed_by\": {",
									"                \"type\": \"null\"",
									"              },",
									"              \"due\": {",
									"                \"type\": [\"integer\",\"null\"]",
									"              },",
									"              \"urgency\": {",
									"                \"type\": \"integer\"",
									"              },",
									"              \"updated_by\": {",
									"                \"type\": [",
									"                  \"integer\",",
									"                  \"null\"",
									"                ]",
									"              },",
									"              \"created_by\": {",
									"                \"type\": [\"integer\",\"null\"]",
									"              },",
									"              \"checklist_id\": {",
									"                \"type\": \"string\"",
									"              },",
									"              \"assignee_id\": {",
									"                \"type\": [\"integer\",\"null\"]",
									"              },",
									"              \"task_id\": {",
									"                \"type\": \"null\"",
									"              },",
									"              \"deleted_at\": {",
									"                \"type\": \"null\"",
									"              },",
									"              \"created_at\": {",
									"                \"type\": \"string\"",
									"              },",
									"              \"updated_at\": {",
									"                \"type\": \"string\"",
									"              }",
									"            }",
									"          },",
									"          \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"self\": {",
									"                \"type\": \"string\"",
									"              }",
									"            }",
									"          }",
									"        }",
									"      }",
									"    },",
									"    \"links\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"first\": {",
									"          \"type\": [\"string\",\"null\"]",
									"        },",
									"        \"last\": {",
									"          \"type\": [\"string\",\"null\"]",
									"        },",
									"        \"next\": {",
									"          \"type\": [\"string\",\"null\"]",
									"        },",
									"        \"prev\": {",
									"          \"type\": [\"string\",\"null\"]",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"if(pm.response.code === 200){",
									"    pm.test(\"JSON Schema Validated!\", () => {",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/checklists/items?page[limit]=10&page[offset]=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								"items"
							],
							"query": [
								{
									"key": "page[limit]",
									"value": "10"
								},
								{
									"key": "page[offset]",
									"value": "0"
								}
							]
						},
						"description": "Get All available items"
					},
					"response": [
						{
							"name": "Get List of All Items - success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/items?page[limit]=10&page[offset]=0",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										"items"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5221"
								},
								{
									"key": "ETag",
									"value": "W/\"1465-4bnIURNj43wwNR7CFP8IOi4b+eg\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 02:50:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"total\": 9,\n        \"offset\": 0,\n        \"count\": 10,\n        \"totalPages\": 1,\n        \"page\": 1,\n        \"pagingCounter\": 1,\n        \"hasPrevPage\": false,\n        \"hasNextPage\": false,\n        \"prev\": null,\n        \"next\": null\n    },\n    \"links\": {\n        \"next\": null,\n        \"prev\": null,\n        \"first\": null,\n        \"last\": null\n    },\n    \"data\": [\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e64\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e64\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Dr. Kennith Streich DVM\",\n                \"urgency\": 7,\n                \"due_interval\": 45,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7a/items/5fbdaec179ebb641e20f6e64\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e65\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e65\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Cassie King\",\n                \"urgency\": 8,\n                \"due_interval\": 56,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7a/items/5fbdaec179ebb641e20f6e65\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e66\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e66\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Vincent Greenholt DVM\",\n                \"urgency\": 3,\n                \"due_interval\": 53,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7a/items/5fbdaec179ebb641e20f6e66\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e67\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e67\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7b\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Rosalia Haag\",\n                \"urgency\": 2,\n                \"due_interval\": 54,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7b/items/5fbdaec179ebb641e20f6e67\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e68\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e68\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7b\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Prof. Margot Harber MD\",\n                \"urgency\": 8,\n                \"due_interval\": 15,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7b/items/5fbdaec179ebb641e20f6e68\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e69\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e69\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7b\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Arch Simonis\",\n                \"urgency\": 3,\n                \"due_interval\": 33,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7b/items/5fbdaec179ebb641e20f6e69\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e6a\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e6a\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7c\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Trent Witting\",\n                \"urgency\": 2,\n                \"due_interval\": 11,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7c/items/5fbdaec179ebb641e20f6e6a\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e6b\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e6b\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7c\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Aliya Gerlach\",\n                \"urgency\": 1,\n                \"due_interval\": 11,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7c/items/5fbdaec179ebb641e20f6e6b\"\n            }\n        },\n        {\n            \"type\": \"items\",\n            \"id\": \"5fbdaec179ebb641e20f6e6c\",\n            \"attributes\": {\n                \"_id\": \"5fbdaec179ebb641e20f6e6c\",\n                \"checklist_id\": \"5fbdaca30aac033c531ddb7c\",\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Karina Langworth V\",\n                \"urgency\": 1,\n                \"due_interval\": 56,\n                \"due_unit\": \"minute\",\n                \"is_completed\": false,\n                \"completed_at\": null,\n                \"created_by\": null,\n                \"updated_by\": null,\n                \"deleted_by\": null,\n                \"due\": null,\n                \"created_at\": \"2020-11-20T18:11:01.000Z\",\n                \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n            },\n            \"links\": {\n                \"self\": \"http://localhost:3000/api/v1/checklist/5fbdaca30aac033c531ddb7c/items/5fbdaec179ebb641e20f6e6c\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get List of All Items in given checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ee1b8db-e5df-4e19-9c94-a329aaf4389d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"  \"type\": \"object\",",
									"  \"title\": \"Checklist Item Response\",",
									"  \"properties\": {",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"type\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"attributes\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"object_domain\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"object_id\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"description\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"is_completed\": {",
									"              \"type\": \"boolean\"",
									"            },",
									"            \"completed_at\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"last_update_by\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"update_at\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"created_at\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"item\": {",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"id\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"name\": {",
									"                  \"type\": \"string\"",
									"                },",
									"                \"is_completed\": {",
									"                  \"type\": \"boolean\"",
									"                },",
									"                \"completed_at\": {",
									"                  \"type\": \"null\"",
									"                },",
									"                \"last_update_by\": {",
									"                  \"type\": \"null\"",
									"                },",
									"                \"update_at\": {",
									"                  \"type\": \"null\"",
									"                },",
									"                \"created_at\": {",
									"                  \"type\": \"string\"",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"links\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"self\": {",
									"              \"type\": \"string\"",
									"            }",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"if(pm.response.code === 200){",
									"    pm.test(\"JSON Schema Validated!\", () => {",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								":checklist_id",
								"items"
							],
							"query": [
								{
									"key": "page[limit]",
									"value": "1"
								},
								{
									"key": "page[offset]",
									"value": "3",
									"description": "default 10"
								},
								{
									"key": "filter[description]",
									"value": ""
								},
								{
									"key": "sort",
									"value": null
								},
								{
									"key": "tz",
									"value": null
								}
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "{{checklist_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get all items by given {checklistId}"
					},
					"response": [
						{
							"name": "Get List of All Items in given checklist - success & match json schema",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "1"
										},
										{
											"key": "page[offset]",
											"value": "3",
											"description": "default 10"
										},
										{
											"key": "filter[description]",
											"value": ""
										},
										{
											"key": "sort",
											"value": null
										},
										{
											"key": "tz",
											"value": null
										}
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 10:49:51 GMT"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 10:49:51 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.12"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": 1,\n        \"attributes\": {\n            \"object_domain\": \"contact\",\n            \"object_id\": \"237\",\n            \"task_id\": null,\n            \"description\": \"Miss Lisette Pagac\",\n            \"due_interval\": 3,\n            \"due_unit\": \"hour\",\n            \"urgency\": 6,\n            \"due\": null,\n            \"is_completed\": false,\n            \"completed_at\": null,\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"created_at\": \"2020-11-22T10:32:08.000000Z\",\n            \"updated_at\": \"2020-11-22T10:32:08.000000Z\",\n            \"items\": [\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Esther Aufderhar\",\n                    \"urgency\": 7,\n                    \"due_interval\": 13,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                },\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Rey Kemmer\",\n                    \"urgency\": 3,\n                    \"due_interval\": 59,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                },\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Dewitt Thompson IV\",\n                    \"urgency\": 6,\n                    \"due_interval\": 46,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                }\n            ]\n        },\n        \"links\": {\n            \"self\": \"http://localhost:8000/api/v1/items/1%2Fitems\"\n        }\n    }\n}"
						},
						{
							"name": "Get List of All Items in given checklist - id not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "1"
										},
										{
											"key": "page[offset]",
											"value": "3",
											"description": "default 10"
										},
										{
											"key": "filter[description]",
											"value": ""
										},
										{
											"key": "sort",
											"value": null
										},
										{
											"key": "tz",
											"value": null
										}
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "23123"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 10:50:24 GMT"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 10:50:24 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.12"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
						}
					]
				},
				{
					"name": "Get a checklist Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c050d18-aacb-4a4b-90d6-15c0ac401237",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"  \"type\": \"object\",",
									"  \"title\": \"Item Response\",",
									"  \"description\": \"Response of item request\",",
									"  \"properties\": {",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"type\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"attributes\": {",
									"          \"type\": \"object\",",
									"          \"title\": \"Item Attributes\",",
									"          \"description\": \"Item attributes\",",
									"          \"required\": [",
									"            \"description\"",
									"          ],",
									"          \"properties\": {",
									"            \"description\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"is_completed\": {",
									"              \"type\": \"boolean\"",
									"            },",
									"            \"completed_at\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"due\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ],",
									"              \"format\": \"date-time\",",
									"              \"example\": \"2020-01-29 11:44:40\"",
									"            },",
									"            \"urgency\": {",
									"              \"type\": [\"null\",\"integer\"]",
									"            },",
									"            \"updated_by\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"updated_at\": {",
									"              \"type\": [\"null\",\"string\"]",
									"            },",
									"            \"created_at\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"assignee_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ]",
									"            },",
									"            \"task_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"number\"",
									"              ]",
									"            }",
									"          }",
									"        },",
									"        \"links\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"self\": {",
									"              \"type\": \"string\"",
									"            }",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"if(pm.response.code === 200){",
									"    pm.test(\"JSON Schema Validated!\", () => {",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								":checklist_id",
								"items",
								":item_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "{{checklist_id}}",
									"type": "string"
								},
								{
									"key": "item_id",
									"value": "{{item_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get item related to given checklist id"
					},
					"response": [
						{
							"name": "Get a checklist Item - success!",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										},
										{
											"key": "item_id",
											"value": "{{item_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "477"
								},
								{
									"key": "ETag",
									"value": "W/\"1dd-B7JBZqEgbOvDPy1kawe4c88hNsI\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 02:43:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": \"5fbdaec179ebb641e20f6e64\",\n        \"attributes\": {\n            \"_id\": \"5fbdaec179ebb641e20f6e64\",\n            \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n            \"assignee_id\": null,\n            \"task_id\": null,\n            \"description\": \"Dr. Kennith Streich DVM\",\n            \"urgency\": 7,\n            \"due_interval\": 45,\n            \"due_unit\": \"minute\",\n            \"is_completed\": false,\n            \"completed_at\": null,\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"deleted_by\": null,\n            \"due\": null,\n            \"created_at\": \"2020-11-20T18:11:01.000Z\",\n            \"updated_at\": \"2020-11-20T18:11:01.000Z\"\n        },\n        \"links\": {\n            \"self\": \"\"\n        }\n    }\n}"
						},
						{
							"name": "Get a checklist Item - wrong checklist id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										},
										{
											"key": "item_id",
											"value": "{{item_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "ETag",
									"value": "W/\"29-fV8nJC3sY1WJL31Tg+omYpVctDA\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 02:42:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 404,\n    \"error\": \"Wrong checklist id\"\n}"
						}
					]
				},
				{
					"name": "Create an Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "157aa582-3265-470a-a87a-bcd13c6ed528",
								"exec": [
									"pm.test(\"Status code is 201 - Created!\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const schema = {",
									"  \"type\": \"object\",",
									"  \"title\": \"Item Response\",",
									"  \"description\": \"Response of item request\",",
									"  \"properties\": {",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"type\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"attributes\": {",
									"          \"type\": \"object\",",
									"          \"title\": \"Item Attributes\",",
									"          \"description\": \"Item attributes\",",
									"          \"required\": [",
									"            \"description\"",
									"          ],",
									"          \"properties\": {",
									"            \"description\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"is_completed\": {",
									"              \"type\": \"boolean\"",
									"            },",
									"            \"completed_at\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"due\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ],",
									"              \"format\": \"date-time\",",
									"              \"example\": \"2020-01-29 11:44:40\"",
									"            },",
									"            \"urgency\": {",
									"              \"type\": [\"null\",\"integer\"]",
									"            },",
									"            \"updated_by\": {",
									"              \"type\": [\"null\",\"integer\"]",
									"            },",
									"            \"updated_at\": {",
									"              \"type\": [\"null\",\"string\"]",
									"            },",
									"            \"created_at\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"assignee_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ]",
									"            },",
									"            \"task_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"number\"",
									"              ]",
									"            }",
									"          }",
									"        },",
									"        \"links\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"self\": {",
									"              \"type\": \"string\"",
									"            }",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"",
									"",
									"if(pm.response.code === 201){",
									"    pm.test(\"JSON Schema Validated!\", () => {",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"78678678 Need to verify this guy house.\",\n      \"due\": \"2020-11-25 10:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": \"123456789012\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								":checklist_id",
								"items"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "{{checklist_id}}",
									"type": "string"
								}
							]
						}
					},
					"response": [
						{
							"name": "Create an Item - success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"78678678 Need to verify this guy house.\",\n      \"due\": \"2020-11-25 10:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": \"123456789012\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "492"
								},
								{
									"key": "ETag",
									"value": "W/\"1ec-vCxTRrC2OmCNvAKg4m3FV/A8Ic4\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 04:27:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": \"5fbddd2c6d43302ee6551b93\",\n        \"attributes\": {\n            \"_id\": \"5fbddd2c6d43302ee6551b93\",\n            \"description\": \"78678678 Need to verify this guy house.\",\n            \"due\": \"2020-11-25T03:34:51.000Z\",\n            \"urgency\": 2,\n            \"assignee_id\": \"313233343536373839303132\",\n            \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n            \"created_at\": \"2020-11-25T04:27:24.160Z\",\n            \"updated_at\": \"2020-11-25T04:27:24.160Z\",\n            \"__v\": 0\n        },\n        \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/checklists/5fbdaca30aac033c531ddb7a/items/5fbddd2c6d43302ee6551b93\"\n        }\n    }\n}"
						},
						{
							"name": "Create an Item - json error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"78678678 Need to verify this guy house.\",\n      \"due\": \"2020-11-25 10:34:51\",\n      \"urgency\": \"2\",\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-O3lvQZ6Al9Uj+n5r7vRiJ54yKNw\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 04:44:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 404,\n    \"message\": \"Unexpected token } in JSON at position 159\"\n}"
						},
						{
							"name": "Create an Item - data is missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "38"
								},
								{
									"key": "ETag",
									"value": "W/\"26-R3Fp3safRStFlF6PboVc9PyjbCQ\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 04:33:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 422,\n    \"error\": \"data is missing\"\n}"
						},
						{
							"name": "Create an Item - missing field",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"78678678 Need to verify this guy house.\",\n      \"urgency\": \"2\",\n      \"assignee_id\": \"123456789012\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "381"
								},
								{
									"key": "ETag",
									"value": "W/\"17d-ivx52YHkpX9j1RNSKYObyOC5myQ\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 04:28:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 422,\n    \"error\": \"items validation failed: due: Path `due` is required.\",\n    \"debug\": {\n        \"errors\": {\n            \"due\": {\n                \"name\": \"ValidatorError\",\n                \"message\": \"Path `due` is required.\",\n                \"properties\": {\n                    \"message\": \"Path `due` is required.\",\n                    \"type\": \"required\",\n                    \"path\": \"due\"\n                },\n                \"kind\": \"required\",\n                \"path\": \"due\"\n            }\n        },\n        \"_message\": \"items validation failed\",\n        \"message\": \"items validation failed: due: Path `due` is required.\"\n    }\n}"
						},
						{
							"name": "Create an Item - data.attribute is missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "48"
								},
								{
									"key": "ETag",
									"value": "W/\"30-Kmg+mWzPW0wJSHIn8useaV2Y23w\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 04:32:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 422,\n    \"error\": \"body.attribute is missing\"\n}"
						}
					]
				},
				{
					"name": "Patch an Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3d16cec-49c7-4f3c-9f28-7dd8bb5a8c10",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"  \"type\": \"object\",",
									"  \"title\": \"Item Response\",",
									"  \"description\": \"Response of item request\",",
									"  \"properties\": {",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"type\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"attributes\": {",
									"          \"type\": \"object\",",
									"          \"title\": \"Item Attributes\",",
									"          \"description\": \"Item attributes\",",
									"          \"required\": [",
									"            \"description\"",
									"          ],",
									"          \"properties\": {",
									"            \"description\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"is_completed\": {",
									"              \"type\": \"boolean\"",
									"            },",
									"            \"completed_at\": {",
									"              \"type\": \"null\"",
									"            },",
									"            \"due\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ],",
									"              \"format\": \"date-time\",",
									"              \"example\": \"2020-01-29 11:44:40\"",
									"            },",
									"            \"urgency\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"integer\"",
									"              ]",
									"            },",
									"            \"updated_by\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ]",
									"            },",
									"            \"updated_at\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ]",
									"            },",
									"            \"created_at\": {",
									"              \"type\": \"string\"",
									"            },",
									"            \"assignee_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"string\"",
									"              ]",
									"            },",
									"            \"task_id\": {",
									"              \"type\": [",
									"                \"null\",",
									"                \"number\"",
									"              ]",
									"            }",
									"          }",
									"        },",
									"        \"links\": {",
									"          \"type\": \"object\",",
									"          \"properties\": {",
									"            \"self\": {",
									"              \"type\": \"string\"",
									"            }",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"",
									"pm.test(\"JSON Schema Validated!\", () => {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"Need to verify this guy house. 222222222222222\",\n      \"due\": \"2019-01-19 18:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": \"123456789012\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								":checklist_id",
								"items",
								":item_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "{{checklist_id}}",
									"type": "string"
								},
								{
									"key": "item_id",
									"value": "{{item_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get checklist by given checklistId. Note: We can include all items in checklist with by passing include=items"
					},
					"response": [
						{
							"name": "Patch an Item - success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"Need to verify this guy house. 222222222222222\",\n      \"due\": \"2019-01-19 18:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": \"123456789012\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "{{checklist_id}}",
											"type": "string"
										},
										{
											"key": "item_id",
											"value": "{{item_id}}",
											"type": "string"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "639"
								},
								{
									"key": "ETag",
									"value": "W/\"27f-3ANjmhnMv9y6wmsRQBEabhVoREk\""
								},
								{
									"key": "Date",
									"value": "Wed, 25 Nov 2020 07:16:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": \"5fbdaec179ebb641e20f6e64\",\n        \"attributes\": {\n            \"_id\": \"5fbdaec179ebb641e20f6e64\",\n            \"checklist_id\": \"5fbdaca30aac033c531ddb7a\",\n            \"assignee_id\": \"313233343536373839303132\",\n            \"task_id\": null,\n            \"description\": \"Need to verify this guy house. 222222222222222\",\n            \"urgency\": 2,\n            \"due_interval\": 45,\n            \"due_unit\": \"minute\",\n            \"is_completed\": false,\n            \"completed_at\": null,\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"deleted_by\": null,\n            \"due\": \"2019-01-19T11:34:51.000Z\",\n            \"created_at\": \"2020-11-20T18:11:01.000Z\",\n            \"updated_at\": \"2020-11-25T07:16:25.366Z\"\n        },\n        \"links\": {\n            \"self\": \"http://localhost:3000/api/v1/checklists/5fbdaca30aac033c531ddb7a/items/5fbdaec179ebb641e20f6e64\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Delete an Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6def25f-9c28-4ecf-9f94-22a02318d860",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"checklists",
								":checklist_id",
								"items",
								":item_id"
							],
							"variable": [
								{
									"key": "checklist_id",
									"value": "{{checklist_id}}",
									"type": "string"
								},
								{
									"key": "item_id",
									"value": "{{item_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get checklist by given checklistId. Note: We can include all items in checklist with by passing include=items"
					},
					"response": [
						{
							"name": "Delete an Item - error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "3"
										},
										{
											"key": "item_id",
											"value": "7"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 23:37:08 GMT"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 23:37:08 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.12"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
						},
						{
							"name": "Delete an Item - delete success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "3"
										},
										{
											"key": "item_id",
											"value": "7"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 23:26:34 GMT"
								},
								{
									"key": "Date",
									"value": "Sun, 22 Nov 2020 23:26:34 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.12"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": 200,\n    \"message\": \"Delete success!\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "WIP",
			"item": [
				{
					"name": "Templates",
					"item": [
						{
							"name": "List all checklists templates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/templates?filter&sort&fields&page_limit&page_offset",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										"templates"
									],
									"query": [
										{
											"key": "filter",
											"value": ""
										},
										{
											"key": "sort",
											"value": ""
										},
										{
											"key": "fields",
											"value": ""
										},
										{
											"key": "page_limit",
											"value": ""
										},
										{
											"key": "page_offset",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "List all checklists templates - mock",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/checklists/templates?filter&sort&fields&page_limit&page_offset",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"checklists",
												"templates"
											],
											"query": [
												{
													"key": "filter",
													"value": null
												},
												{
													"key": "sort",
													"value": null
												},
												{
													"key": "fields",
													"value": null
												},
												{
													"key": "page_limit",
													"value": null
												},
												{
													"key": "page_offset",
													"value": null
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"meta\": {\n    \"count\": 10,\n    \"total\": 100\n  },\n  \"links\": {\n    \"first\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=0\",\n    \"last\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"next\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"prev\": \"null\"\n  },\n  \"data\": [\n    {\n      \"name\": \"foo template\",\n      \"checklist\": {\n        \"description\": \"my checklist\",\n        \"due_interval\": 3,\n        \"due_unit\": \"hour\"\n      },\n      \"items\": [\n        {\n          \"description\": \"my foo item\",\n          \"urgency\": 2,\n          \"due_interval\": 40,\n          \"due_unit\": \"minute\"\n        },\n        {\n          \"description\": \"my bar item\",\n          \"urgency\": 3,\n          \"due_interval\": 30,\n          \"due_unit\": \"minute\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Items",
					"item": [
						{
							"name": "Get List of All Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa4b5fa7-f5c6-481d-9636-0ae1a83353d8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"meta\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"count\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"total\": {",
											"          \"type\": \"integer\"",
											"        }",
											"      }",
											"    },",
											"    \"data\": {",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"type\": \"object\",",
											"        \"properties\": {",
											"          \"type\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"id\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"attributes\": {",
											"            \"type\": \"object\",",
											"            \"properties\": {",
											"              \"description\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"is_completed\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"completed_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"completed_by\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"due\": {",
											"                \"type\": [\"integer\",\"null\"]",
											"              },",
											"              \"urgency\": {",
											"                \"type\": \"integer\"",
											"              },",
											"              \"updated_by\": {",
											"                \"type\": [",
											"                  \"integer\",",
											"                  \"null\"",
											"                ]",
											"              },",
											"              \"created_by\": {",
											"                \"type\": [\"integer\",\"null\"]",
											"              },",
											"              \"checklist_id\": {",
											"                \"type\": \"integer\"",
											"              },",
											"              \"assignee_id\": {",
											"                \"type\": [\"integer\",\"null\"]",
											"              },",
											"              \"task_id\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"deleted_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"created_at\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"updated_at\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          },",
											"          \"links\": {",
											"            \"type\": \"object\",",
											"            \"properties\": {",
											"              \"self\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"links\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"first\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"last\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"next\": {",
											"          \"type\": [\"string\",\"null\"]",
											"        },",
											"        \"prev\": {",
											"          \"type\": [\"string\",\"null\"]",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/items?page[limit]=10&page[offset]=495",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										"items"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "495"
										}
									]
								},
								"description": "Get All available items"
							},
							"response": []
						},
						{
							"name": "Get List of All Items in given checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d21efc96-5035-4ec2-b1a1-d5f768f2a015",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"title\": \"Checklist Item Response\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"id\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"attributes\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"object_domain\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"object_id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"description\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"is_completed\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"completed_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"last_update_by\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"update_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"created_at\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"item\": {",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"id\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"name\": {",
											"                  \"type\": \"string\"",
											"                },",
											"                \"is_completed\": {",
											"                  \"type\": \"boolean\"",
											"                },",
											"                \"completed_at\": {",
											"                  \"type\": \"null\"",
											"                },",
											"                \"last_update_by\": {",
											"                  \"type\": \"null\"",
											"                },",
											"                \"update_at\": {",
											"                  \"type\": \"null\"",
											"                },",
											"                \"created_at\": {",
											"                  \"type\": \"string\"",
											"                }",
											"              }",
											"            }",
											"          }",
											"        },",
											"        \"links\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"self\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"query": [
										{
											"key": "page[limit]",
											"value": "1"
										},
										{
											"key": "page[offset]",
											"value": "3",
											"description": "default 10"
										},
										{
											"key": "filter[description]",
											"value": ""
										},
										{
											"key": "sort",
											"value": ""
										},
										{
											"key": "tz",
											"value": ""
										}
									],
									"variable": [
										{
											"id": "76e38302-37d2-4b68-a8d8-c6ef2c4b48f4",
											"key": "checklist_id",
											"value": "1",
											"type": "string"
										}
									]
								},
								"description": "Get all items by given {checklistId}"
							},
							"response": [
								{
									"name": "Get List of All Items in given checklist - success & match json schema",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items"
											],
											"query": [
												{
													"key": "page[limit]",
													"value": "1"
												},
												{
													"key": "page[offset]",
													"value": "3",
													"description": "default 10"
												},
												{
													"key": "filter[description]",
													"value": ""
												},
												{
													"key": "sort",
													"value": null
												},
												{
													"key": "tz",
													"value": null
												}
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:49:51 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:49:51 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"type\": \"items\",\n        \"id\": 1,\n        \"attributes\": {\n            \"object_domain\": \"contact\",\n            \"object_id\": \"237\",\n            \"task_id\": null,\n            \"description\": \"Miss Lisette Pagac\",\n            \"due_interval\": 3,\n            \"due_unit\": \"hour\",\n            \"urgency\": 6,\n            \"due\": null,\n            \"is_completed\": false,\n            \"completed_at\": null,\n            \"created_by\": null,\n            \"updated_by\": null,\n            \"created_at\": \"2020-11-22T10:32:08.000000Z\",\n            \"updated_at\": \"2020-11-22T10:32:08.000000Z\",\n            \"items\": [\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Esther Aufderhar\",\n                    \"urgency\": 7,\n                    \"due_interval\": 13,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                },\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Rey Kemmer\",\n                    \"urgency\": 3,\n                    \"due_interval\": 59,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                },\n                {\n                    \"checklist_id\": 1,\n                    \"assignee_id\": null,\n                    \"task_id\": null,\n                    \"description\": \"Dewitt Thompson IV\",\n                    \"urgency\": 6,\n                    \"due_interval\": 46,\n                    \"due_unit\": \"minute\",\n                    \"is_completed\": 0,\n                    \"completed_at\": null,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null,\n                    \"due\": null\n                }\n            ]\n        },\n        \"links\": {\n            \"self\": \"http://localhost:8000/api/v1/items/1%2Fitems\"\n        }\n    }\n}"
								},
								{
									"name": "Get List of All Items in given checklist - id not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items?page[limit]=1&page[offset]=3&filter[description]=&sort&tz",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items"
											],
											"query": [
												{
													"key": "page[limit]",
													"value": "1"
												},
												{
													"key": "page[offset]",
													"value": "3",
													"description": "default 10"
												},
												{
													"key": "filter[description]",
													"value": ""
												},
												{
													"key": "sort",
													"value": null
												},
												{
													"key": "tz",
													"value": null
												}
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "23123"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:50:24 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:50:24 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								}
							]
						},
						{
							"name": "Get a checklist Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aab3e6c-4412-48d0-be51-3c683a1e81d1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"title\": \"Item Response\",",
											"  \"description\": \"Response of item request\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"id\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"attributes\": {",
											"          \"type\": \"object\",",
											"          \"title\": \"Item Attributes\",",
											"          \"description\": \"Item attributes\",",
											"          \"required\": [",
											"            \"description\"",
											"          ],",
											"          \"properties\": {",
											"            \"description\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"is_completed\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"completed_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"due\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ],",
											"              \"format\": \"date-time\",",
											"              \"example\": \"2020-01-29 11:44:40\"",
											"            },",
											"            \"urgency\": {",
											"              \"type\": [\"null\",\"integer\"]",
											"            },",
											"            \"updated_by\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"updated_at\": {",
											"              \"type\": [\"null\",\"string\"]",
											"            },",
											"            \"created_at\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"assignee_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ]",
											"            },",
											"            \"task_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"number\"",
											"              ]",
											"            }",
											"          }",
											"        },",
											"        \"links\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"self\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"key": "checklist_id",
											"value": "1",
											"type": "string"
										},
										{
											"key": "item_id",
											"value": "1",
											"type": "string"
										}
									]
								},
								"description": "Get item related to given checklist id"
							},
							"response": [
								{
									"name": "Get a checklist Item - item not related to checklist id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "1"
												},
												{
													"key": "item_id",
													"value": "5"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:19:13 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:19:13 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								},
								{
									"name": "Get a checklist Item - item not relate to checklist id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "6"
												},
												{
													"key": "item_id",
													"value": "2"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:19:36 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:19:36 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								},
								{
									"name": "Get a checklist Item - success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "1"
												},
												{
													"key": "item_id",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:18:54 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 10:18:54 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"checklist_id\": 1,\n        \"assignee_id\": null,\n        \"task_id\": null,\n        \"description\": \"Francesco Hane\",\n        \"urgency\": 6,\n        \"due_interval\": 29,\n        \"due_unit\": \"minute\",\n        \"is_completed\": 0,\n        \"completed_at\": null,\n        \"created_by\": null,\n        \"updated_by\": null,\n        \"deleted_by\": null,\n        \"due\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create an Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0ad6c35-717c-4f1d-8fbe-6d51a029eb12",
										"exec": [
											"pm.test(\"Status code is 201 - Created!\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"title\": \"Item Response\",",
											"  \"description\": \"Response of item request\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"id\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"attributes\": {",
											"          \"type\": \"object\",",
											"          \"title\": \"Item Attributes\",",
											"          \"description\": \"Item attributes\",",
											"          \"required\": [",
											"            \"description\"",
											"          ],",
											"          \"properties\": {",
											"            \"description\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"is_completed\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"completed_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"due\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ],",
											"              \"format\": \"date-time\",",
											"              \"example\": \"2020-01-29 11:44:40\"",
											"            },",
											"            \"urgency\": {",
											"              \"type\": [\"null\",\"integer\"]",
											"            },",
											"            \"updated_by\": {",
											"              \"type\": [\"null\",\"integer\"]",
											"            },",
											"            \"updated_at\": {",
											"              \"type\": [\"null\",\"string\"]",
											"            },",
											"            \"created_at\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"assignee_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ]",
											"            },",
											"            \"task_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"number\"",
											"              ]",
											"            }",
											"          }",
											"        },",
											"        \"links\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"self\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"",
											"",
											"if(pm.response.code === 201){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"345345 Need to verify this guy house.\",\n      \"due\": \"2019-01-19 18:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": 123\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items"
									],
									"variable": [
										{
											"id": "d6ebb057-0a89-42a4-a713-7cdb23dff773",
											"key": "checklist_id",
											"value": "3",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Create an Item - error body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "3"
												}
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 22:46:42 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 22:46:42 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"data.attribute.assignee_id\": [\n            \"The data.attribute.assignee id field is required.\"\n        ]\n    }\n}"
								},
								{
									"name": "Create an Item - success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"Go to house 3432432\",\n      \"due\": \"2019-01-19 18:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": 123\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "3"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 22:56:28 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 22:56:28 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"type\": \"checklists\",\n        \"id\": \"96\",\n        \"attributes\": {\n            \"checklist_id\": 3,\n            \"assignee_id\": 123,\n            \"task_id\": null,\n            \"description\": \"Go to house 3432432\",\n            \"urgency\": 2,\n            \"due_interval\": null,\n            \"due_unit\": null,\n            \"is_completed\": false,\n            \"completed_at\": null,\n            \"created_by\": 1,\n            \"updated_by\": 1,\n            \"deleted_by\": null,\n            \"due\": \"2019-01-19 18:34:51\",\n            \"created_at\": \"2020-11-22T22:56:28.000000Z\",\n            \"updated_at\": \"2020-11-22T22:56:28.000000Z\"\n        },\n        \"links\": {\n            \"self\": \"http://localhost:8000/api/v1/checklists/3/items/96\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Patch an Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a6ab797-3e1b-4e90-a448-a854f00fc3c7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"title\": \"Item Response\",",
											"  \"description\": \"Response of item request\",",
											"  \"properties\": {",
											"    \"data\": {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"id\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"attributes\": {",
											"          \"type\": \"object\",",
											"          \"title\": \"Item Attributes\",",
											"          \"description\": \"Item attributes\",",
											"          \"required\": [",
											"            \"description\"",
											"          ],",
											"          \"properties\": {",
											"            \"description\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"is_completed\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"completed_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"due\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ],",
											"              \"format\": \"date-time\",",
											"              \"example\": \"2020-01-29 11:44:40\"",
											"            },",
											"            \"urgency\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"updated_by\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"updated_at\": {",
											"              \"type\": \"null\"",
											"            },",
											"            \"created_at\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"assignee_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"string\"",
											"              ]",
											"            },",
											"            \"task_id\": {",
											"              \"type\": [",
											"                \"null\",",
											"                \"number\"",
											"              ]",
											"            }",
											"          }",
											"        },",
											"        \"links\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"self\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"",
											"pm.test(\"JSON Schema Validated!\", () => {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attribute\": {\n      \"description\": \"Need to verify this guy house.\",\n      \"due\": \"2019-01-19 18:34:51\",\n      \"urgency\": \"2\",\n      \"assignee_id\": 123\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"id": "6a3a85e1-2ea7-475e-a95c-69e6d890ed10",
											"key": "checklist_id",
											"value": "2",
											"type": "string"
										},
										{
											"id": "800226ed-cca2-433f-9536-456faccc2f52",
											"key": "item_id",
											"value": "4",
											"type": "string"
										}
									]
								},
								"description": "Get checklist by given checklistId. Note: We can include all items in checklist with by passing include=items"
							},
							"response": [
								{
									"name": "Patch an Item - success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "2"
												},
												{
													"key": "item_id",
													"value": "4"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:49:13 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:49:13 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "56"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"checklist_id\": 2,\n        \"assignee_id\": 123,\n        \"task_id\": null,\n        \"description\": \"Need to verify this guy house.\",\n        \"urgency\": 2,\n        \"due_interval\": 19,\n        \"due_unit\": \"minute\",\n        \"is_completed\": false,\n        \"completed_at\": null,\n        \"created_by\": null,\n        \"updated_by\": 1,\n        \"deleted_by\": null,\n        \"due\": \"2019-01-19 18:34:51\",\n        \"created_at\": \"2020-11-22T23:43:22.000000Z\",\n        \"updated_at\": \"2020-11-22T23:49:13.000000Z\"\n    }\n}"
								},
								{
									"name": "Patch an Item - error vaildation",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "2"
												},
												{
													"key": "item_id",
													"value": "4"
												}
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:50:24 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:50:24 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"data\": [\n            \"The data field is required.\"\n        ],\n        \"data.attribute\": [\n            \"The data.attribute field is required.\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Delete an Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44fd96df-aff1-457e-8984-02623b400db8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklist_id",
										"items",
										":item_id"
									],
									"variable": [
										{
											"id": "4d93bdcc-fc9c-41e7-b080-c0e1196472c9",
											"key": "checklist_id",
											"value": "2",
											"type": "string"
										},
										{
											"id": "224506ef-97f1-4777-b0b4-330f8882d782",
											"key": "item_id",
											"value": "4",
											"type": "string"
										}
									]
								},
								"description": "Get checklist by given checklistId. Note: We can include all items in checklist with by passing include=items"
							},
							"response": [
								{
									"name": "Delete an Item - delete success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "3"
												},
												{
													"key": "item_id",
													"value": "7"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:26:34 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:26:34 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"message\": \"Delete success!\"\n}"
								},
								{
									"name": "Delete an Item - error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklist_id/items/:item_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklist_id",
												"items",
												":item_id"
											],
											"variable": [
												{
													"key": "checklist_id",
													"value": "3"
												},
												{
													"key": "item_id",
													"value": "7"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:37:08 GMT"
										},
										{
											"key": "Date",
											"value": "Sun, 22 Nov 2020 23:37:08 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								}
							]
						},
						{
							"name": "Get Incomplete item(s)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff170cf5-c1cf-4457-9c4c-abb54f500471",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"title\": \"Checklist Complete Response\",",
											"    \"properties\": {",
											"      \"data\": {",
											"        \"type\": \"array\",",
											"        \"items\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"id\": {",
											"              \"type\": \"integer\"",
											"            },",
											"            \"item_id\": {",
											"              \"type\": \"integer\"",
											"            },",
											"            \"is_completed\": {",
											"              \"type\": \"boolean\"",
											"            },",
											"            \"checklist_id\": {",
											"              \"type\": \"string\"",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"item_id\": 1\n    },\n    {\n      \"item_id\": 2\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/incomplete",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										"incomplete"
									]
								},
								"description": "Get item related to given checklist id"
							},
							"response": [
								{
									"name": "Get Incomplete item(s) - success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    {\n      \"item_id\": 1\n    },\n    {\n      \"item_id\": 2\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/incomplete",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												"incomplete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:27:47 GMT"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:27:47 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"current_page\": 1,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"item_id\": 1,\n            \"is_completed\": false,\n            \"checklist_id\": \"1\"\n        },\n        {\n            \"id\": 2,\n            \"item_id\": 2,\n            \"is_completed\": false,\n            \"checklist_id\": \"1\"\n        },\n        {\n            \"id\": 3,\n            \"item_id\": 3,\n            \"is_completed\": false,\n            \"checklist_id\": \"1\"\n        },\n        {\n            \"id\": 4,\n            \"item_id\": 4,\n            \"is_completed\": false,\n            \"checklist_id\": \"2\"\n        },\n        {\n            \"id\": 5,\n            \"item_id\": 5,\n            \"is_completed\": false,\n            \"checklist_id\": \"2\"\n        },\n        {\n            \"id\": 6,\n            \"item_id\": 6,\n            \"is_completed\": false,\n            \"checklist_id\": \"2\"\n        },\n        {\n            \"id\": 8,\n            \"item_id\": 8,\n            \"is_completed\": false,\n            \"checklist_id\": \"3\"\n        },\n        {\n            \"id\": 9,\n            \"item_id\": 9,\n            \"is_completed\": false,\n            \"checklist_id\": \"3\"\n        },\n        {\n            \"id\": 10,\n            \"item_id\": 10,\n            \"is_completed\": false,\n            \"checklist_id\": \"4\"\n        },\n        {\n            \"id\": 11,\n            \"item_id\": 11,\n            \"is_completed\": false,\n            \"checklist_id\": \"4\"\n        }\n    ],\n    \"first_page_url\": \"http://localhost:8000/api/v1/checklists/incomplete?page=1\",\n    \"from\": 1,\n    \"next_page_url\": \"http://localhost:8000/api/v1/checklists/incomplete?page=2\",\n    \"path\": \"http://localhost:8000/api/v1/checklists/incomplete\",\n    \"per_page\": 10,\n    \"prev_page_url\": null,\n    \"to\": 10\n}"
								},
								{
									"name": "Get Incomplete item(s) - error empty request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/incomplete",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												"incomplete"
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:56:47 GMT"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:56:47 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"data\": [\n            \"The data field is required.\"\n        ]\n    }\n}"
								},
								{
									"name": "Get Incomplete item(s) - wrong body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    {\n      \"asdasd\": 1\n    },\n    {\n      \"asdasd\": 2\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/incomplete",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												"incomplete"
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:57:14 GMT"
										},
										{
											"key": "Date",
											"value": "Mon, 23 Nov 2020 00:57:14 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"data.0.item_id\": [\n            \"The data.0.item_id field is required.\"\n        ],\n        \"data.1.item_id\": [\n            \"The data.1.item_id field is required.\"\n        ]\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Checklists",
					"item": [
						{
							"name": "Get List of All Checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc1d33b4-450f-4fed-9077-49f9e71727c6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"  \"type\": \"object\",",
											"  \"title\": \"Checklist List Response\",",
											"  \"properties\": {",
											"    \"meta\": {",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"count\",",
											"        \"total\"",
											"      ],",
											"      \"properties\": {",
											"        \"count\": {",
											"          \"type\": \"integer\"",
											"        },",
											"        \"total\": {",
											"          \"type\": \"integer\"",
											"        }",
											"      }",
											"    },",
											"    \"links\": {",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"first\",",
											"        \"last\",",
											"        \"next\",",
											"        \"prev\"",
											"      ],",
											"      \"properties\": {",
											"        \"first\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"last\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"next\": {",
											"          \"type\": [\"string\",\"null\"]",
											"        },",
											"        \"prev\": {",
											"          \"type\": [\"string\",\"null\"]",
											"        }",
											"      }",
											"    },",
											"    \"data\": {",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"type\",",
											"          \"id\",",
											"          \"links\"",
											"        ],",
											"        \"properties\": {",
											"          \"type\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"id\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"attributes\": {",
											"            \"type\": \"object\",",
											"            \"title\": \"Cheklist Attributes\",",
											"            \"required\": [",
											"              \"object_domain\",",
											"              \"object_id\",",
											"              \"description\"",
											"            ],",
											"            \"properties\": {",
											"              \"object_domain\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"object_id\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"description\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"is_completed\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"completed_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"updated_by\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"updated_at\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"created_at\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"due\": {",
											"                \"type\": [",
											"                  \"string\",",
											"                  \"null\"",
											"                ],",
											"                \"format\": \"date-time\",",
											"                \"example\": \"2020-01-29 11:44:40\"",
											"              },",
											"              \"urgency\": {",
											"                \"type\": \"integer\"",
											"              }",
											"            }",
											"          },",
											"          \"links\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"              \"self\"",
											"            ],",
											"            \"properties\": {",
											"              \"self\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"meta\",",
											"    \"links\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists?page=1&include=items&page_limit=3&filter[description]=",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "include",
											"value": "items",
											"description": "items"
										},
										{
											"key": "page_limit",
											"value": "3",
											"description": "default 10"
										},
										{
											"key": "filter[description]",
											"value": ""
										}
									]
								},
								"description": "Get checklist by given checklistId. Note: We can include all items in checklist with by passing include=items"
							},
							"response": [
								{
									"name": "Get List of All Checklist - filter description",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists?page=1&include=items&page_limit=3&filter[description]=Dasia",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "include",
													"value": "items"
												},
												{
													"key": "page_limit",
													"value": "3",
													"description": "default 10"
												},
												{
													"key": "filter[description]",
													"value": "Dasia"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 16:00:08 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 16:00:08 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 1,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Prof. Dasia Champlin V\",\n                    \"due_interval\": 3,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 4,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 1,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Dr. Ashton Leuschke PhD\",\n                            \"urgency\": 6,\n                            \"due_interval\": 21,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 1,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Mr. Willard Zulauf\",\n                            \"urgency\": 5,\n                            \"due_interval\": 4,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 1,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Keith Effertz\",\n                            \"urgency\": 3,\n                            \"due_interval\": 39,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 1,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Prof. Everette Schultz II\",\n                            \"urgency\": 4,\n                            \"due_interval\": 59,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 1,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Tressie Ledner\",\n                            \"urgency\": 2,\n                            \"due_interval\": 20,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/1\"\n                }\n            }\n        ]\n    ],\n    \"meta\": {\n        \"count\": 3,\n        \"total\": 1\n    },\n    \"links\": {\n        \"first\": \"http://localhost:8000/api/v1/checklists?page=1\",\n        \"last\": \"http://localhost:8000/api/v1/checklists?page=1\",\n        \"prev\": null,\n        \"next\": null\n    }\n}"
								},
								{
									"name": "Get List of All Checklist - page 1",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists?page=1",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:12:04 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:12:04 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 1,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Mrs. Marlee Hegmann Sr.\",\n                    \"due_interval\": 8,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/1\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 2,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Hannah Balistreri V\",\n                    \"due_interval\": 1,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/2\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 3,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Mr. Webster Strosin IV\",\n                    \"due_interval\": 4,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/3\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 4,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Green Green\",\n                    \"due_interval\": 2,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/4\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 5,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Ms. Elisa Kunze\",\n                    \"due_interval\": 4,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/5\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 6,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Austen Reichert\",\n                    \"due_interval\": 2,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/6\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 7,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Margarita Fay\",\n                    \"due_interval\": 3,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/7\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 8,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Arno Jakubowski\",\n                    \"due_interval\": 7,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/8\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 9,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Oda Brakus\",\n                    \"due_interval\": 4,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/9\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 10,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Alayna Nolan\",\n                    \"due_interval\": 7,\n                    \"due_unit\": \"hour\",\n                    \"is_completed\": 0,\n                    \"created_by\": null,\n                    \"updated_by\": null,\n                    \"deleted_by\": null\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/10\"\n                }\n            }\n        ]\n    ],\n    \"meta\": {\n        \"count\": 10,\n        \"total\": 100\n    },\n    \"links\": {\n        \"first\": \"http://localhost:8000/api/v1/checklists?page=1\",\n        \"last\": \"http://localhost:8000/api/v1/checklists?page=10\",\n        \"prev\": null,\n        \"next\": \"http://localhost:8000/api/v1/checklists?page=2\"\n    }\n}"
								},
								{
									"name": "Get List of All Checklist - error 500",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists?page=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:37:36 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:37:36 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"500\",\n    \"error\": \"Server Error\"\n}"
								},
								{
									"name": "List all checklists templates - mock",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/checklists/templates?filter&sort&fields&page_limit&page_offset",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"checklists",
												"templates"
											],
											"query": [
												{
													"key": "filter",
													"value": null
												},
												{
													"key": "sort",
													"value": null
												},
												{
													"key": "fields",
													"value": null
												},
												{
													"key": "page_limit",
													"value": null
												},
												{
													"key": "page_offset",
													"value": null
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"meta\": {\n    \"count\": 10,\n    \"total\": 100\n  },\n  \"links\": {\n    \"first\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=0\",\n    \"last\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"next\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"prev\": \"null\"\n  },\n  \"data\": [\n    {\n      \"name\": \"foo template\",\n      \"checklist\": {\n        \"description\": \"my checklist\",\n        \"due_interval\": 3,\n        \"due_unit\": \"hour\"\n      },\n      \"items\": [\n        {\n          \"description\": \"my foo item\",\n          \"urgency\": 2,\n          \"due_interval\": 40,\n          \"due_unit\": \"minute\"\n        },\n        {\n          \"description\": \"my bar item\",\n          \"urgency\": 3,\n          \"due_interval\": 30,\n          \"due_unit\": \"minute\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Get List of All Checklist - include 'items'",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists?page=2&include=items",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "include",
													"value": "items"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:40:58 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 15:40:58 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 11,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Floy Stokes\",\n                    \"due_interval\": 2,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 6,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 11,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Rocio Kihn\",\n                            \"urgency\": 3,\n                            \"due_interval\": 41,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 11,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Dr. Amelie Kozey II\",\n                            \"urgency\": 5,\n                            \"due_interval\": 3,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 11,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Samson Johns\",\n                            \"urgency\": 1,\n                            \"due_interval\": 36,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 11,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Lauretta Fisher\",\n                            \"urgency\": 8,\n                            \"due_interval\": 13,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 11,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Rosanna Parker DVM\",\n                            \"urgency\": 9,\n                            \"due_interval\": 19,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/11\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 12,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Miracle Lynch\",\n                    \"due_interval\": 3,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 4,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 12,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Dr. Sincere Crooks Jr.\",\n                            \"urgency\": 1,\n                            \"due_interval\": 1,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 12,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Ms. Priscilla Morar Sr.\",\n                            \"urgency\": 5,\n                            \"due_interval\": 60,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 12,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Winnifred O'Hara\",\n                            \"urgency\": 1,\n                            \"due_interval\": 15,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 12,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Rowan Reichel\",\n                            \"urgency\": 8,\n                            \"due_interval\": 40,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 12,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Norberto Pagac\",\n                            \"urgency\": 2,\n                            \"due_interval\": 27,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/12\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 13,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Mrs. Bridie Watsica II\",\n                    \"due_interval\": 7,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 7,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 13,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Edmund Pfeffer MD\",\n                            \"urgency\": 3,\n                            \"due_interval\": 21,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 13,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Odie Price\",\n                            \"urgency\": 1,\n                            \"due_interval\": 42,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 13,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Stone Tromp\",\n                            \"urgency\": 8,\n                            \"due_interval\": 33,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 13,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Vivianne Beatty Jr.\",\n                            \"urgency\": 5,\n                            \"due_interval\": 54,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 13,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Horace Labadie\",\n                            \"urgency\": 7,\n                            \"due_interval\": 24,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/13\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 14,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Miss Adela Kilback Sr.\",\n                    \"due_interval\": 5,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 7,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 14,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Rowena Bergstrom PhD\",\n                            \"urgency\": 9,\n                            \"due_interval\": 59,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 14,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Price Stanton\",\n                            \"urgency\": 1,\n                            \"due_interval\": 17,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 14,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Sabina Hirthe\",\n                            \"urgency\": 2,\n                            \"due_interval\": 34,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 14,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Leora Larson V\",\n                            \"urgency\": 6,\n                            \"due_interval\": 1,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 14,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Wanda Hermiston\",\n                            \"urgency\": 4,\n                            \"due_interval\": 32,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/14\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 15,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Elbert Becker\",\n                    \"due_interval\": 4,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 1,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 15,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Esther Fahey\",\n                            \"urgency\": 6,\n                            \"due_interval\": 7,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 15,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Bertram Marvin Sr.\",\n                            \"urgency\": 5,\n                            \"due_interval\": 41,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 15,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Ms. Alva Rowe\",\n                            \"urgency\": 4,\n                            \"due_interval\": 3,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 15,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Keenan Klein\",\n                            \"urgency\": 3,\n                            \"due_interval\": 53,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 15,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Prof. Warren Kihn\",\n                            \"urgency\": 2,\n                            \"due_interval\": 47,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/15\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 16,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Murphy Mayert\",\n                    \"due_interval\": 9,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 8,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 16,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Coleman Huel\",\n                            \"urgency\": 6,\n                            \"due_interval\": 16,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 16,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Rowena Hilpert\",\n                            \"urgency\": 6,\n                            \"due_interval\": 6,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 16,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Edd Terry\",\n                            \"urgency\": 9,\n                            \"due_interval\": 40,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 16,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Christina Bode\",\n                            \"urgency\": 9,\n                            \"due_interval\": 29,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 16,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Beryl Hickle\",\n                            \"urgency\": 9,\n                            \"due_interval\": 39,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/16\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 17,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Mr. Paul Haley\",\n                    \"due_interval\": 2,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 7,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 17,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Prof. Terrell Nolan MD\",\n                            \"urgency\": 8,\n                            \"due_interval\": 12,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 17,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Miss Cathryn Parker\",\n                            \"urgency\": 2,\n                            \"due_interval\": 56,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 17,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Andreanne Tillman\",\n                            \"urgency\": 4,\n                            \"due_interval\": 57,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 17,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Tianna Purdy\",\n                            \"urgency\": 1,\n                            \"due_interval\": 43,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 17,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Marlen Pfannerstill\",\n                            \"urgency\": 1,\n                            \"due_interval\": 31,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/17\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 18,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Adriel Pacocha V\",\n                    \"due_interval\": 2,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 1,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 18,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Stella Crist\",\n                            \"urgency\": 5,\n                            \"due_interval\": 48,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 18,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Garfield Littel\",\n                            \"urgency\": 3,\n                            \"due_interval\": 29,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 18,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Prof. Laurel Stehr II\",\n                            \"urgency\": 2,\n                            \"due_interval\": 48,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 18,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Leslie Rolfson\",\n                            \"urgency\": 8,\n                            \"due_interval\": 1,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 18,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Prof. Rosendo Rice\",\n                            \"urgency\": 1,\n                            \"due_interval\": 37,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/18\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 19,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Nona Gorczany\",\n                    \"due_interval\": 5,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 4,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 19,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Lazaro Cronin\",\n                            \"urgency\": 2,\n                            \"due_interval\": 7,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 19,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Skylar Waelchi Sr.\",\n                            \"urgency\": 8,\n                            \"due_interval\": 29,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 19,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Alice Zieme II\",\n                            \"urgency\": 7,\n                            \"due_interval\": 55,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 19,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Gaylord Bailey\",\n                            \"urgency\": 1,\n                            \"due_interval\": 48,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 19,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Montana Schoen\",\n                            \"urgency\": 1,\n                            \"due_interval\": 23,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/19\"\n                }\n            }\n        ],\n        [\n            {\n                \"type\": \"checklists\",\n                \"id\": 20,\n                \"attributes\": {\n                    \"object_domain\": \"contact\",\n                    \"description\": \"Nelson Parker\",\n                    \"due_interval\": 7,\n                    \"due_unit\": \"hour\",\n                    \"urgency\": 5,\n                    \"is_completed\": false,\n                    \"completed_at\": null,\n                    \"updated_by\": null,\n                    \"items\": [\n                        {\n                            \"checklist_id\": 20,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Ms. Sheila Deckow II\",\n                            \"urgency\": 5,\n                            \"due_interval\": 18,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 20,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Brycen Brakus\",\n                            \"urgency\": 2,\n                            \"due_interval\": 30,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 20,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Geovanni Daniel\",\n                            \"urgency\": 6,\n                            \"due_interval\": 24,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 20,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Mrs. Samantha Hagenes III\",\n                            \"urgency\": 8,\n                            \"due_interval\": 34,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        },\n                        {\n                            \"checklist_id\": 20,\n                            \"assignee_id\": null,\n                            \"task_id\": null,\n                            \"description\": \"Natasha Stroman Jr.\",\n                            \"urgency\": 5,\n                            \"due_interval\": 59,\n                            \"due_unit\": \"minute\",\n                            \"is_completed\": 0,\n                            \"completed_at\": null,\n                            \"created_by\": null,\n                            \"updated_by\": null,\n                            \"deleted_by\": null\n                        }\n                    ]\n                },\n                \"links\": {\n                    \"self\": \"http://localhost:8000/api/v1/checklists/20\"\n                }\n            }\n        ]\n    ],\n    \"meta\": {\n        \"count\": 20,\n        \"total\": 100\n    },\n    \"links\": {\n        \"first\": \"http://localhost:8000/api/v1/checklists?page=1\",\n        \"last\": \"http://localhost:8000/api/v1/checklists?page=10\",\n        \"prev\": \"http://localhost:8000/api/v1/checklists?page=1\",\n        \"next\": \"http://localhost:8000/api/v1/checklists?page=3\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get a Checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2566852-bb9f-4df8-a54c-59de3f2a191a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"title\": \"Checklist Response\",",
											"    \"properties\": {",
											"      \"data\": {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"type\",",
											"          \"id\",",
											"          \"attributes\",",
											"          \"links\"",
											"        ],",
											"        \"properties\": {",
											"          \"type\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"id\": {",
											"            \"type\": \"integer\"",
											"          },",
											"          \"attributes\": {",
											"            \"type\": \"object\",",
											"            \"title\": \"Cheklist Attributes\",",
											"            \"required\": [",
											"              \"object_domain\",",
											"              \"object_id\",",
											"              \"description\"",
											"            ],",
											"            \"properties\": {",
											"              \"object_domain\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"object_id\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"description\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"is_completed\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"completed_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"updated_by\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"updated_at\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"created_at\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"due\": {",
											"                \"type\": [",
											"                  \"string\",",
											"                  \"null\"",
											"                ],",
											"                \"format\": \"date-time\",",
											"                \"example\": \"2020-01-29 11:44:40\"",
											"              },",
											"              \"urgency\": {",
											"                \"type\": \"integer\"",
											"              }",
											"            }",
											"          },",
											"          \"links\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"              \"self\"",
											"            ],",
											"            \"properties\": {",
											"              \"self\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"required\": [",
											"      \"data\"",
											"    ]",
											"  };",
											"",
											"",
											"if(pm.response.code === 200){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"type": "string"
										}
									]
								},
								"description": "Get checklist by given id"
							},
							"response": [
								{
									"name": "List all checklists templates - mock",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/checklists/templates?filter&sort&fields&page_limit&page_offset",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"checklists",
												"templates"
											],
											"query": [
												{
													"key": "filter",
													"value": null
												},
												{
													"key": "sort",
													"value": null
												},
												{
													"key": "fields",
													"value": null
												},
												{
													"key": "page_limit",
													"value": null
												},
												{
													"key": "page_offset",
													"value": null
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"meta\": {\n    \"count\": 10,\n    \"total\": 100\n  },\n  \"links\": {\n    \"first\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=0\",\n    \"last\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"next\": \"https://kong.command-api.kw.com/api/v1/checklists/templates?page[limit]=10&page[offset]=10\",\n    \"prev\": \"null\"\n  },\n  \"data\": [\n    {\n      \"name\": \"foo template\",\n      \"checklist\": {\n        \"description\": \"my checklist\",\n        \"due_interval\": 3,\n        \"due_unit\": \"hour\"\n      },\n      \"items\": [\n        {\n          \"description\": \"my foo item\",\n          \"urgency\": 2,\n          \"due_interval\": 40,\n          \"due_unit\": \"minute\"\n        },\n        {\n          \"description\": \"my bar item\",\n          \"urgency\": 3,\n          \"due_interval\": 30,\n          \"due_unit\": \"minute\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Get a Checklist - 404 not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklistId?filter=&sort=&fields=&page_limit=&page_offset=",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklistId"
											],
											"query": [
												{
													"key": "filter",
													"value": ""
												},
												{
													"key": "sort",
													"value": ""
												},
												{
													"key": "fields",
													"value": ""
												},
												{
													"key": "page_limit",
													"value": ""
												},
												{
													"key": "page_offset",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "checklistId",
													"value": "101"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 16:09:47 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 16:09:47 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "57"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								}
							]
						},
						{
							"name": "Create a Checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7135468a-0105-4787-8402-129ac0ea7e3f",
										"exec": [
											"pm.test(\"Status code is 201 - Created!\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"title\": \"Checklist Response\",",
											"    \"properties\": {",
											"      \"data\": {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"type\",",
											"          \"id\",",
											"          \"attributes\",",
											"          \"links\"",
											"        ],",
											"        \"properties\": {",
											"          \"type\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"id\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"attributes\": {",
											"            \"type\": \"object\",",
											"            \"title\": \"Cheklist Attributes\",",
											"            \"required\": [",
											"              \"object_domain\",",
											"              \"object_id\",",
											"              \"description\"",
											"            ],",
											"            \"properties\": {",
											"              \"object_domain\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"object_id\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"description\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"is_completed\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"completed_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"updated_by\": {",
											"                \"type\": [\"integer\",\"null\"]",
											"              },",
											"              \"updated_at\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"created_at\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"due\": {",
											"                \"type\": [",
											"                  \"string\",",
											"                  \"null\"",
											"                ],",
											"                \"format\": \"date-time\",",
											"                \"example\": \"2020-01-29 11:44:40\"",
											"              },",
											"              \"urgency\": {",
											"                \"type\": \"integer\"",
											"              }",
											"            }",
											"          },",
											"          \"links\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"              \"self\"",
											"            ],",
											"            \"properties\": {",
											"              \"self\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"required\": [",
											"      \"data\"",
											"    ]",
											"  };",
											"",
											"",
											"if(pm.response.code === 201){",
											"    pm.test(\"JSON Schema Validated!\", () => {",
											"        pm.response.to.have.jsonSchema(schema);",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": 0,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists"
									]
								},
								"description": "create checklist"
							},
							"response": [
								{
									"name": "Create a Checklist - 401 no token bearer",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": 0,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:40:53 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:40:53 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"401\",\n    \"error\": \"Not Authorized\"\n}"
								},
								{
									"name": "Create a Checklist - error validation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": a,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											]
										}
									},
									"status": "Unprocessable Entity",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:07:40 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:07:40 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"data.attributes.object_domain\": [\n            \"The data.attributes.object domain field is required.\"\n        ],\n        \"data.attributes.object_id\": [\n            \"The data.attributes.object id field is required.\"\n        ],\n        \"data.attributes.description\": [\n            \"The data.attributes.description field is required.\"\n        ],\n        \"data.attributes.items\": [\n            \"The data.attributes.items field is required.\"\n        ]\n    }\n}"
								},
								{
									"name": "Create a Checklist - 201 Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": 0,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:36:33 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:36:33 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"checklists\",\n    \"id\": 106,\n    \"attributes\": {\n        \"object_domain\": \"contact\",\n        \"object_id\": \"1\",\n        \"task_id\": \"123\",\n        \"description\": \"Need to verify this guy house.\",\n        \"due_interval\": null,\n        \"due_unit\": null,\n        \"urgency\": 0,\n        \"due\": \"2019-01-25T07:50:14.000000Z\",\n        \"is_completed\": false,\n        \"completed_at\": null,\n        \"created_by\": 11,\n        \"updated_by\": 11,\n        \"created_at\": \"2020-11-20T17:36:32.000000Z\",\n        \"updated_at\": \"2020-11-20T17:36:32.000000Z\",\n        \"items\": [\n            {\n                \"checklist_id\": 106,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Visit his house\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            },\n            {\n                \"checklist_id\": 106,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Capture a photo\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            },\n            {\n                \"checklist_id\": 106,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Meet him on the house\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            }\n        ]\n    },\n    \"links\": {\n        \"self\": \"http://localhost:8000/api/v1/checklists/106\"\n    }\n}"
								}
							]
						},
						{
							"name": "Patch a Checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62788d75-f95f-4b12-927b-5fee6db6dcc9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"title\": \"Checklist Response\",",
											"    \"properties\": {",
											"      \"data\": {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"type\",",
											"          \"id\",",
											"          \"attributes\",",
											"          \"links\"",
											"        ],",
											"        \"properties\": {",
											"          \"type\": {",
											"            \"type\": \"string\"",
											"          },",
											"          \"id\": {",
											"            \"type\": \"integer\"",
											"          },",
											"          \"attributes\": {",
											"            \"type\": \"object\",",
											"            \"title\": \"Cheklist Attributes\",",
											"            \"required\": [",
											"              \"object_domain\",",
											"              \"object_id\",",
											"              \"description\"",
											"            ],",
											"            \"properties\": {",
											"              \"object_domain\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"object_id\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"description\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"is_completed\": {",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"completed_at\": {",
											"                \"type\": \"null\"",
											"              },",
											"              \"updated_by\": {",
											"                \"type\": [\"integer\",\"null\"]",
											"              },",
											"              \"updated_at\": {",
											"                \"type\": [\"string\",\"null\"]",
											"              },",
											"              \"created_at\": {",
											"                \"type\": \"string\"",
											"              },",
											"              \"due\": {",
											"                \"type\": [",
											"                  \"string\",",
											"                  \"null\"",
											"                ],",
											"                \"format\": \"date-time\",",
											"                \"example\": \"2020-01-29 11:44:40\"",
											"              },",
											"              \"urgency\": {",
											"                \"type\": \"integer\"",
											"              }",
											"            }",
											"          },",
											"          \"links\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"              \"self\"",
											"            ],",
											"            \"properties\": {",
											"              \"self\": {",
											"                \"type\": \"string\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    },",
											"    \"required\": [",
											"      \"data\"",
											"    ]",
											"  };",
											"",
											"",
											"pm.test(\"JSON Schema Validated!\", () => {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact2222\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": 0,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklistId",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklistId"
									],
									"variable": [
										{
											"id": "d93328b3-49b0-4d57-9ba9-1432f42de895",
											"key": "checklistId",
											"value": "2",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Patch a Checklist - success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"attributes\": {\n      \"object_domain\": \"contact2222\",\n      \"object_id\": \"1\",\n      \"due\": \"2019-01-25T07:50:14+00:00\",\n      \"urgency\": 0,\n      \"description\": \"Need to verify this guy house.\",\n      \"items\": [\n        \"Visit his house\",\n        \"Capture a photo\",\n        \"Meet him on the house\"\n      ],\n      \"task_id\": \"123\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklistId",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklistId"
											],
											"variable": [
												{
													"key": "checklistId",
													"value": "102"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:50:46 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:50:46 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"checklists\",\n    \"id\": 102,\n    \"attributes\": {\n        \"object_domain\": \"contact2222\",\n        \"object_id\": \"1\",\n        \"task_id\": \"123\",\n        \"description\": \"Need to verify this guy house.\",\n        \"due_interval\": null,\n        \"due_unit\": null,\n        \"urgency\": 0,\n        \"due\": \"2019-01-25T07:50:14.000000Z\",\n        \"is_completed\": false,\n        \"completed_at\": null,\n        \"created_by\": 11,\n        \"updated_by\": 11,\n        \"created_at\": \"2020-11-20T17:27:07.000000Z\",\n        \"updated_at\": \"2020-11-20T17:50:46.000000Z\",\n        \"items\": [\n            {\n                \"checklist_id\": 102,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Visit his house\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            },\n            {\n                \"checklist_id\": 102,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Capture a photo\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            },\n            {\n                \"checklist_id\": 102,\n                \"assignee_id\": null,\n                \"task_id\": null,\n                \"description\": \"Meet him on the house\",\n                \"urgency\": null,\n                \"due_interval\": null,\n                \"due_unit\": null,\n                \"is_completed\": 0,\n                \"completed_at\": null,\n                \"created_by\": 11,\n                \"updated_by\": 11,\n                \"deleted_by\": null,\n                \"due\": null\n            }\n        ]\n    },\n    \"links\": {\n        \"self\": \"http://localhost:8000/api/v1/checklists/102\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete a Checklist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3194a0e1-c0f3-4294-8ffc-444a98579e20",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/v1/checklists/:checklistId",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"checklists",
										":checklistId"
									],
									"variable": [
										{
											"id": "e1dfa122-38fd-483a-85cf-430fd237992a",
											"key": "checklistId",
											"value": "2",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete a Checklist - 404",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklistId",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklistId"
											],
											"variable": [
												{
													"key": "checklistId",
													"value": "102"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:56:53 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:56:53 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "58"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"404\",\n    \"error\": \"Not Found\"\n}"
								},
								{
									"name": "Delete a Checklist - success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/api/v1/checklists/:checklistId",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"checklists",
												":checklistId"
											],
											"variable": [
												{
													"key": "checklistId",
													"value": "103"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Host",
											"value": "localhost:8000"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:57:36 GMT"
										},
										{
											"key": "Date",
											"value": "Fri, 20 Nov 2020 17:57:36 GMT"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.10"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 200,\n    \"message\": \"Delete success!\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "22a3b029-5d7c-4d7f-b821-6ee2086a8d18",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c3d4c244-a219-4cd8-8fdb-3fdcec977716",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}